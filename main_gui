# Try
from tkinter import *
from tkinter.ttk import Progressbar
from PIL import ImageTk, Image
import time

import os
import datetime
import sys
import time
import subprocess
import serial
import base64


# '''


# GUI Code
# creating basic window
window = Tk()
# window.geometry("400x300") # size of the window width:- 500, height:- 375
window.configure(bg='gray')
m = window.maxsize()
# window.geometry('{}x{}+0+0'.format(*m))
# window.resizable(0, 0) # this prevents from resizing the window

window.title("REVA University Thermal Scanning System")

progress = Progressbar(window, orient=HORIZONTAL, mode='determinate')
progress.pack(side='bottom', fill='x')
# progress.start()


'''logoFrame = Frame(window, width = 100,  bg='gray', bd = 0,highlightbackground = "black", highlightcolor = "black", highlightthickness = 1)
logoFrame.pack(side = TOP)

canvas = Canvas(logoFrame)  
img1 = ImageTk.PhotoImage(Image.open("REVALOGO.jpg"))  
canvas.create_image(10,10,anchor=NW, image=img1) 
canvas.pack()'''

load = Image.open("assets/revaLogo.jpg")
render = ImageTk.PhotoImage(load)
img = Label(window, image=render)
img.image = render
img.pack(side=TOP)

photoFrame = Frame(window, width=200, height=100, bg='gray', bd=0, highlightbackground="black", highlightcolor="black",
                   highlightthickness=1)
photoFrame.pack(side=TOP)

# creating an input field inside the 'Frame'
canvas1 = Canvas(photoFrame)
#img2 = ImageTk.PhotoImage(Image.open(captureImage()))
img2 = ImageTk.PhotoImage(Image.open("assets/currentImage.jpg").resize((250, 250), Image.ANTIALIAS))


canvas1.create_image(50, 50, anchor=NW, image=img2)
canvas1.pack()

detailsFrame = Frame(window, width=200, height=100, bg='gray', bd=0, highlightbackground="black",
                     highlightcolor="black", highlightthickness=1)
detailsFrame.pack(side=TOP)

REVAID = Label(detailsFrame, text="REVA_ID", bg="gray", relief='raised', justify='left', font=("Times New Roman", 14),
               width='12', padx=1, pady=1)
REVAID.config(anchor=W, justify=LEFT)
REVAID.grid(row=1, column=1)

RevaIDValue = Label(detailsFrame, text="R18EC329", bg="gray", relief='raised', width='12',
                    font=("Times New Roman", 14), padx=1, pady=1)
RevaIDValue.config(anchor=W, justify=LEFT)
RevaIDValue.grid(row=1, column=2)

Temperature = Label(detailsFrame, text="TEMP", bg="gray", relief='raised', width='12', font=("Times New Roman", 14),
                    padx=1, pady=1)
Temperature.config(anchor=W, justify=LEFT)
Temperature.grid(row=2, column=1)
TempValue = Label(detailsFrame, text="95", bg="gray", relief='raised', width='12',
                  font=("Times New Roman", 14), padx=1, pady=1)
TempValue.config(anchor=W, justify=LEFT)
TempValue.grid(row=2, column=2)

curDate = Label(detailsFrame, text="Date", bg="gray", relief='raised', width='12', font=("Times New Roman", 14), padx=1,
                pady=1)
curDate.config(anchor=W, justify=LEFT)
curDate.grid(row=3, column=1)

DateValue = Label(detailsFrame, text="21/02/2020", bg="gray", relief='raised', width='12', font=("Times New Roman", 14),
                  padx=1, pady=1)
DateValue.config(anchor=W, justify=LEFT)
DateValue.grid(row=3, column=2)

curTime = Label(detailsFrame, text="Time", bg="gray", relief='raised', width='12', font=("Times New Roman", 14), padx=1,
                pady=1)
curTime.config(anchor=W, justify=LEFT)
curTime.grid(row=4, column=1)
TimeValue = Label(detailsFrame, text="01:30", bg="gray", relief='raised', width='12', font=("Times New Roman", 14),
                  padx=1, pady=1)
TimeValue.config(anchor=W, justify=LEFT)
TimeValue.grid(row=4, column=2)

# progress['value'] = 20
# window.update_idletasks()
# time.sleep(1)
# Button(window, text = 'Start', command = bar).pack(pady = 10)
statusLabel = Label(window, text="What is this status?", bg="gray", width='25', font=("Times New Roman", 14), padx=1, pady=1)
statusLabel.pack(side=BOTTOM)
window.mainloop()

